package Stack_Queue.correctParenthesis;

import java.util.Stack;

public class Solution {
	public static void main(String[] args) {

		Solution test = new Solution();
		boolean result;
		String inputStr = "";

		// 테스트 1
		inputStr = "()()";
		result = test.solution(inputStr);
		System.out.println("test1 : " + result);

		// 테스트 2
		inputStr = "(())()";
		result = test.solution(inputStr);
		System.out.println("test2 : " + result);

		// 테스트 3
		inputStr = ")()(";
		result = test.solution(inputStr);
		System.out.println("test3 : " + result);

		// 테스트 4
		inputStr = "(()(";
		result = test.solution(inputStr);
		System.out.println("test5 : " + result);

		// 테스트 5
		inputStr = "()())(()";
		result = test.solution(inputStr);
		System.out.println("test4 : " + result);
	}

	boolean solution(String s) {

		boolean answer = true;
		Stack<Character> stack = new Stack<Character>();

		String[] strArray = s.split("");

		// 시작이 ) 경우, 마지막이 ( 경우 제외
		if (s.startsWith(")") || s.endsWith("(")) {
			return false;
		}

		for (int i = 0; i < s.length(); i++) {
			if (s.charAt(i) == '(') {
				stack.push('(');
				
			} 
			
			else {
				if (stack.isEmpty()) {
					return false;
					
				} else {
					stack.pop();
				}
			}
		}
		return true;
	}
}
